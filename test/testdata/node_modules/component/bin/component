#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var utils = require('../lib/utils');
var spawn = require('win-fork');
var path = require('path');
var fs = require('fs');
var join = path.join;
var exists = fs.existsSync;

// usage

program
  .version(require('../package').version)
  .usage('<command> [options]');

// sub-command help

program.on('--help', function(){
  console.log('  Commands:');
  console.log();
  console.log('    install [name ...]      install one or more components');
  console.log('    create [dir]            create a component skeleton');
  console.log('    search [query]          search with the given query');
  console.log('    convert <file ...>      convert html files to js modules');
  console.log('    info <name> [prop]      output json component information');
  console.log('    changes <name>          output changelog contents');
  console.log('    wiki                    open the components list wiki page');
  console.log('    build                   build the component');
  console.log('    ls                      list installed components');
  console.log();
  process.exit();
});

// parse argv

program.parse(process.argv);

// args void of cmd

var args = process.argv.slice(3);

// command

var cmd = program.args[0];

// alias "install" as "add"

if ('add' == cmd) cmd = 'install';

// display help

if (!cmd) {
  process.stdout.write(program.helpInformation());
  program.emit('--help');
  process.exit();
}

// executable

var bin = 'component-' + cmd;

// local

var local = join(__dirname, bin);
if (exists(local)) bin = local;

// spawn

var proc = spawn(bin, args, { stdio: 'inherit', customFds: [0, 1, 2] });

proc.on('close', function(code){
  process.exit(code);
});
